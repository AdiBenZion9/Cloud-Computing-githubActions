name: assignment3
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Insert to log file start time and submitters names
        run: echo -e "$(date -Iminutes)\nAdi Ben Zion, Noa Benborhoum" > /tmp/log.txt

      - name: Print Log File Contents # this is for check only
        run: cat /tmp/log.txt # this is for check only

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: ./books
          tags: books:latest
          outputs: type=docker,dest=/tmp/image.tar

      - name: Handle build failure
        if: failure()
        run: |
          echo -e "image not able to be built" >> /tmp/log.txt

      - name: Handle build success
        if: success()
        run: |
          echo -e "image successfully built" >> /tmp/log.txt

      - name: Print log file contents # this is for check only
        run: cat /tmp/log.txt # this is for check only

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: /tmp/log.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: books
          path: /tmp/image.tar
        
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download books artifact
        uses: actions/download-artifact@v4
        with:
          name: books
          path: /tmp

      - name: Load Docker images from previous workflows
        run: docker load --input /tmp/image.tar

      - name: Download log artifact
        uses: actions/download-artifact@v4
        with:
          name: log
          path: /tmp

      - name: Print log file contents # this is for check only
        run: cat /tmp/log.txt # this is for check only

      - name: Check if books image is loaded
        run: docker image ls

      - name: Run Docker Compose
        run: docker-compose up -d # Removed the & symbol to ensure the command completes

      - name: Wait for application to start
        run: sleep 10

      - name: Check container is running
        id: check_containers
        run: |
          if [[ $(docker ps --filter "status=running" --filter "name=books" | wc -l) -ge 2 ]]; then
            echo "containers_running=true" >> $GITHUB_ENV
            echo "Container up and running" >> /tmp/log.txt
          else
            echo "containers_running=false" >> $GITHUB_ENV
            echo "Container failed to run" >> /tmp/log.txt
            exit 1
          fi

      - name: Print log file contents # this is for check only
        run: cat /tmp/log.txt # this is for check only

      - name: Set up Python
        if: env.containers_running == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        if: env.containers_running == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with pytest
        if: env.containers_running == 'true'
        run: |
          cd tests
          pytest -v assn3_tests.py || exit 1

      - name: Handle tests success
        if: success() && env.containers_running == 'true'
        run: echo -e "tests succeeded" >> /tmp/log.txt

      - name: Handle tests failure
        if: failure() && env.containers_running == 'true'
        run: echo -e "tests failed" >> /tmp/log.txt

      - name: Upload test results to the requested file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: assn3_test_results
          path: tests/assn3_test_results.txt

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: /tmp/log.txt
          overwrite: true

      - name: Shut down Docker Compose
        if: always()
        run: docker-compose down
      
  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download books image artifact
      uses: actions/download-artifact@v4
      with:
        name: books
        path: /tmp

    - name: Load Docker image
      run: docker load --input /tmp/image.tar

    - name: Download log file
      uses: actions/download-artifact@v4
      with:
        name: log
        path: /tmp

    - name: Start Docker Compose
      run: docker-compose up -d

    - name: Wait for application to start
      run: sleep 10

    - name: Execute POST requests
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{"title": "Adventures of Huckleberry Finn", "ISBN": "9780520343641", "genre": "Fiction"}' http://localhost:5001/books
        curl -X POST -H "Content-Type: application/json" -d '{"title": "The Best of Isaac Asimov", "ISBN": "9780385050784", "genre": "Science Fiction"}' http://localhost:5001/books
        curl -X POST -H "Content-Type: application/json" -d '{"title": "Fear No Evil", "ISBN": "9780394558783", "genre": "Biography"}' http://localhost:5001/books
        curl -X POST -H "Content-Type: application/json" -d '{"title": "The Adventures of Tom Sawyer", "ISBN": "9780195810400", "genre": "Fiction"}' http://localhost:5001/books
        curl -X POST -H "Content-Type: application/json" -d '{"title": "I, Robot", "ISBN": "9780553294385", "genre": "Science Fiction"}' http://localhost:5001/books
        curl -X POST -H "Content-Type: application/json" -d '{"title": "Second Foundation", "ISBN": "9780553293364", "genre": "Science Fiction"}' http://localhost:5001/books

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install requests

    - name: run query
      run: |
        cd tests
        python run_query.py
 
    - name: Upload response file
      uses: actions/upload-artifact@v4
      with:
        name: response
        path: tests/response.txt

    - name: Shut down Docker Compose
      if: always()
      run: docker-compose down